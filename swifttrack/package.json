{
  "name": "swifttrack",
  "version": "1.0.0",
  "description": "SwiftTrack Logistics Platform Backend",
  "private": true,
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "dev": "concurrently \"pnpm run dev:api-gateway\" \"pnpm run dev:order-service\"",
    "dev:api-gateway": "cd apps/api-gateway && pnpm dev",
    "dev:order-service": "cd apps/order-service && pnpm dev",
    "dev:all": "concurrently \"pnpm run dev:*\"",
    "start": "concurrently \"pnpm run start:api-gateway\" \"pnpm run start:order-service\"",
    "start:api-gateway": "cd apps/api-gateway && pnpm start",
    "start:order-service": "cd apps/order-service && pnpm start",
    "build": "pnpm -r build",
    "build:packages": "pnpm --filter=@swifttrack/shared build && pnpm --filter=@swifttrack/security build && pnpm --filter=@swifttrack/message-bus build && pnpm --filter=@swifttrack/db build",
    "test": "pnpm -r test",
    "test:e2e": "pnpm -r test:e2e",
    "lint": "pnpm -r lint",
    "format": "prettier --write \"**/*.{ts,js,json,md}\"",
    "db:migrate": "cd packages/db && pnpm migrate:up",
    "db:rollback": "cd packages/db && pnpm migrate:down",
    "db:seed": "cd packages/db && pnpm seed",
    "db:seed:force": "cd packages/db && pnpm seed -- --force",
    "db:reset": "pnpm db:rollback && pnpm db:migrate && pnpm db:seed:force",
    "db:health": "cd packages/db && pnpm health",
    "db:setup": "node -e \"require('child_process').exec(process.platform === 'win32' ? 'setup-database.bat' : 'bash setup-database.sh', (err, stdout, stderr) => { if (stdout) console.log(stdout); if (stderr) console.error(stderr); if (err) process.exit(1); })\"",
    "db:clean": "docker-compose down postgres && docker volume rm swifttrack_postgres_data || true",
    "infra:up": "docker-compose up -d",
    "infra:down": "docker-compose down",
    "infra:logs": "docker-compose logs -f",
    "infra:dev": "docker-compose -f docker-compose.dev.yml up -d",
    "infra:dev:down": "docker-compose -f docker-compose.dev.yml down",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down -v",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v --rmi all --remove-orphans",
    "health": "curl http://localhost:3000/health || echo 'Service not ready'",
    "setup": "node scripts/setup.js",
    "smoke-test": "node scripts/smoke-test.js"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "concurrently": "^8.2.0",
    "eslint": "^8.44.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^5.0.0",
    "husky": "^8.0.3",
    "lint-staged": "^13.2.3",
    "prettier": "^3.0.0",
    "typescript": "^5.1.6"
  },
  "dependencies": {
    "dotenv": "^16.3.1"
  },
  "engines": {
    "node": ">=20.0.0",
    "pnpm": ">=8.0.0"
  },
  "packageManager": "pnpm@8.6.12"
}
